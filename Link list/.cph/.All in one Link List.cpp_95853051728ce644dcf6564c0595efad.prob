{"name":"Local: All in one Link List","url":"d:\\First Step(DSA)\\DSA revision\\Link list\\All in one Link List.cpp","tests":[{"id":1678037186889,"input":"3\n4 5 \n1 4 6 8 \n3 5 7 9 10\n7 3\n1 2 3 4 5 6 7 \n8 9 10","output":"1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> NULL\n7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 1 -> NULL\n6 -> 5 -> 4 -> 3 -> 2 -> 1 -> NULL\nthe node is inside of the linklist \n7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 1 -> NULL\n the reverse k node be look like this : \n6 -> 7 -> 4 -> 5 -> 2 -> 3 -> 1 -> NULL\n your doubly link list goes like this : \n1 -< 2 -< 3 -< 4 -< 5 -< 6 -< 7 -< NULL\ndeletation in doubly link list \n1 -< 3 -< 4 -< 5 -< 6 -< 7 -< NULL\ndeletion of doubly link list head\n3 -< 4 -< 5 -< 6 -< 7 -< NULL\n8 -> 7 -> 6 -> 5 -> 4 -> 3 -> 2 -> 1 -> NULL\nappennd k node \nLink list : \n1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> NULL\nAppend Link List \n7 -> 8 -> 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> NULL\nMerge two sorted link list : \n1 -> 4 -> 6 -> 8 -> NULL\n3 -> 5 -> 7 -> 9 -> 10 -> NULL\n1 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> NULL\nFind Two link list intersaction point : \n1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> NULL\n8 -> 9 -> 10 -> NULL\n1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> NULL\n8 -> 9 -> 10 -> 5 -> 6 -> 7 -> NULL\n the intersacting point is : 5"}],"interactive":false,"memoryLimit":1024,"timeLimit":3000,"srcPath":"d:\\First Step(DSA)\\DSA revision\\Link list\\All in one Link List.cpp","group":"local","local":true}